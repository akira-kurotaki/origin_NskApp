/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/respond.js@1.4.2/test/unit/tests.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
QUnit.config.reorder=!1,window.onload=function(){function e(e){var n=window.location.href;return n.substr(0,n.lastIndexOf("/")+1)+(e||"")}function n(e){var n=window.setInterval((function(){respond.queue.length||(window.clearInterval(n),e())}),50)}if(window.opener){var t=document.getElementById("testelem");function i(){return t.offsetWidth}function s(){return t.offsetHeight}var o=function(){for(var e=3,n=document.createElement("div"),t=n.getElementsByTagName("i");n.innerHTML="\x3c!--[if gt IE "+ ++e+"]><i></i><![endif]--\x3e",t[0];);return e>4?e:undefined}();window.moveTo(0,0),asyncTest("Styles not nested in media queries apply as expected",(function(){window.resizeTo(200,800),setTimeout((function(){strictEqual(i(),50,"testelem is 50px wide when window is 200px wide"),start()}),900)})),asyncTest("styles within min-width media queries apply properly",(function(){window.resizeTo(520,800),setTimeout((function(){strictEqual(i(),150,"testelem is 150px wide when window is 500px wide"),start()}),900)})),o>=7&&asyncTest("attribute selectors still work (where supported) after respond runs its course",(function(){window.resizeTo(520,800),setTimeout((function(){strictEqual(s(),200,"testelem is 200px tall when window is 500px wide"),start()}),900)})),asyncTest("styles within max-width media queries apply properly",(function(){window.resizeTo(300,800),setTimeout((function(){strictEqual(s(),150,"testelem is 150px tall when window is under 480px wide"),start()}),900)})),asyncTest("min and max-width media queries that use EM units apply properly",(function(){window.resizeTo(580,800),setTimeout((function(){strictEqual(i(),75,"testelem is 75px wide when window is 580px wide (between 33em and 38em)"),start()}),900)})),asyncTest('styles within a min-width media query with an "only" keyword apply properly',(function(){window.resizeTo(660,800),setTimeout((function(){strictEqual(i(),250,"testelem is 250px wide when window is 650px wide"),start()}),900)})),asyncTest("styles within a media query with a one true query among other false queries apply properly",(function(){window.resizeTo(800,800),setTimeout((function(){strictEqual(i(),350,"testelem is 350px wide when window is > 620px wide"),start()}),900)})),asyncTest("Styles within a false media query do not apply",(function(){window.resizeTo(800,800),setTimeout((function(){notStrictEqual(i(),500,"testelem is not 500px wide when window is 800px wide"),start()}),900)})),asyncTest("stylesheets with a media query in a media attribute apply when they should",(function(){window.resizeTo(1e3,800),setTimeout((function(){strictEqual(i(),16,"testelem is 16px wide when window is wider than 950px"),start()}),900)})),asyncTest("stylesheets with an EM-based media query in a media attribute apply when they should",(function(){window.resizeTo(1150,800),setTimeout((function(){strictEqual(i(),25,"testelem is 25px wide when window is wider than 1100px wide. Does your screen width go that wide?"),start()}),900)})),asyncTest("Test keyframe animation inside of media query",(function(){n((function(){respond.ajax(e("test-with-keyframe.css"),(function(e){ok(e.replace(respond.regex.keyframes,"").match(respond.regex.media),"A keyframe animation doesn't bust the media regex."),start()}))}))})),asyncTest("Test comments inside of a media query",(function(){n((function(){respond.ajax(e("test-with-comment.css"),(function(e){var n=e.replace(respond.regex.comments,"");ok(n.match(respond.regex.media),"Comments don't bust the media regex."),ok(!n.match(/\/\*/gi),"No start comments exist in the result."),ok(!n.match(/\*\//gi),"No end comments exist in the result."),start()}))}))})),test("Issue #242 overly agressive keyframes regex",(function(){strictEqual("@media(q1){ @keyframes abc{ from{ }to{ } } } @media(q2){}".replace(respond.regex.keyframes,""),"@media(q1){  } @media(q2){}"),strictEqual("@media(q1){} @keyframes abc{ from{ }to{ } } @media(q2){}".replace(respond.regex.keyframes,""),"@media(q1){}  @media(q2){}"),strictEqual("@media(q1){} @media(q2){ @keyframes abc{ from{ }to{ } } }".replace(respond.regex.keyframes,""),"@media(q1){} @media(q2){  }")})),test("Test spaces around min-width/max-width",(function(){ok(null==="@media only screen and (min-width: 1px) { }".match(respond.regex.maxw)),ok(null==="@media only screen and ( min-width: 1px ) { }".match(respond.regex.maxw)),ok("@media only screen and (min-width: 1px) { }".match(respond.regex.minw).length),ok("@media only screen and ( min-width: 1px ) { }".match(respond.regex.minw).length),ok(null==="@media only screen and (max-width: 1280px) { }".match(respond.regex.minw)),ok(null==="@media only screen and ( max-width: 1280px ) { }".match(respond.regex.minw)),ok("@media only screen and (max-width: 1280px) { }".match(respond.regex.maxw).length),ok("@media only screen and ( max-width: 1280px ) { }".match(respond.regex.maxw).length)})),test("Issue #161: spaces around inside min-width/max-width",(function(){ok(null!=="@media only screen and (min-width : 1px) { }".match(respond.regex.min)),ok(null!=="@media only screen and (max-width : 1px ) { }".match(respond.regex.maxw))})),test("Issue #181: non-min-width and non-max-width queries",(function(){for(var e,n,t=["(min--moz-device-pixel-ratio: 1.5)","(-moz-min-device-pixel-ratio: 1.5)","(-o-min-device-pixel-ratio: 1.5)","(-webkit-min-device-pixel-ratio: 1.5)","(min-device-pixel-ratio: 1.5)","(min-resolution: 1.5dppx)"],i=0,s=t.length;i<s;i++)n=(e="only screen and (max-width: 1319px) and "+t[i]+" {}").match(respond.regex.minmaxwh),equal(n&&n[0],"(max-width: 1319px)"),equal(respond.unsupportedmq(e)[0],t[i]),equal(("only screen and (max-width: 1319px) and (min-width: 1px) and "+t[i]+" {}").replace(respond.regex.minmaxwh,"").match(respond.regex.other)[0],t[i]),equal(("only screen and (max-width: 1319px) and (min-height: 1px) and "+t[i]+" {}").replace(respond.regex.minmaxwh,"").match(respond.regex.other)[0],t[i])})),test("Issue #181: unsupported MQ tests",(function(){strictEqual(respond.unsupportedmq("(min-width: 1151px)"),null),strictEqual(respond.unsupportedmq("all and (max-width: 699px) and (min-width: 520px)"),null),strictEqual(respond.unsupportedmq("print"),null),ok(respond.unsupportedmq("all and (orientation:portrait)")),ok(respond.unsupportedmq("screen and (device-aspect-ratio: 16/9)")),ok(respond.unsupportedmq("all and (color)")),ok(respond.unsupportedmq("all and (min-color: 1)")),ok(respond.unsupportedmq("all and (monochrome)")),ok(respond.unsupportedmq("print and (min-resolution: 300dpi)")),ok(respond.unsupportedmq("tv and (scan: progressive)")),ok(respond.unsupportedmq("handheld and (grid) and (device-max-height: 7em)"))})),asyncTest("Issue #181: full MQ with DPR",(function(){n((function(){respond.ajax(e("test-with-dpr.css"),(function(e){ok(respond.unsupportedmq(e)),start()}))}))}))}else document.documentElement.className="launcher",document.getElementById("launcher").innerHTML='<p>Tests must run in a popup window. <a href="suite.html" id="suitelink">Open test suite</a></p>',document.getElementById("suitelink").onclick=function(){return window.open(location.href+"?"+Math.random(),"win","width=800,height=600,scrollbars=1,resizable=1"),!1}};
//# sourceMappingURL=/sm/6ff8c2628bae9b73505e613451ad5db636d6b12b5416b87f7e8f7d325836907f.map