@model NskWeb.Areas.F04.Models.D0401.D0401Model
@{
    var startIndex = 120;
}
@if (Model.SearchResult.TableRecords != null && !(Model.SearchResult.TableRecords.Count() <= 0))
{
    <div class="table-responsive table-thead-container">
        @Html.Pager("Pager", "pagerClick", Model.SearchResult.Pager)
    </div>
    <div class="table-responsive table-thead-container scroll-table">
        <table class="table_scroll_stipped">
            <thead>
                <tr>
                    <th rowspan="2">取込対象</th>
                    <th colspan="3">取込範囲</th>
                    <th rowspan="2">取込ファイル名</th>
                    <th rowspan="2">ステータス<br>（データ反映）</th>
                    <th rowspan="2">取込完了日時</th>
                    <th rowspan="2">ロック開始日時</th>
                    <th rowspan="2">データ反映日時</th>
                    <th rowspan="2">削除</th>
                </tr>
                <tr style="border-bottom:none;">
                    <th>対象年度</th>
                    <th>組合等</th>
                    <th>支所</th>
                </tr>
            </thead>
            <tbody>
                @for (var index = 0; index < Model.SearchResult.TableRecords.Count(); index++)
                {
                    var item = Model.SearchResult.TableRecords.ElementAt(index);
                    <tr>
                        @*取込対象*@
                        <td class="fixed-td-left">
                            @Html.Label("", string.IsNullOrEmpty(item.TorikomiNm) ? string.Empty : item.TorikomiNm)
                        </td>

                        @*対象年度*@
                        <td class="table-without-wordbreak">
                            @Html.Label("", item.Nendo == null ? "-" : NendoUtil.GetNendoDisp1(item.Nendo.Value))
                        </td>

                        @*組合等*@
                        <td>@Html.Label("", item.KumiaitoCd + CoreConst.SEPARATOR + item.KumiaitoNm)</td>

                        @*支所*@
                        <td>@Html.Label("", string.IsNullOrEmpty(item.ShishoCd) ? "-" : item.ShishoCd + CoreConst.SEPARATOR + item.ShishoNm)</td>

                        @*取込ファイル名*@
                        <td>@Html.Label("", item.TorikomiFileNm ?? string.Empty)</td>

                        @*ステータス*@
                        <td>
                            @if (AppConst.TorikomiSts.IMPORT_ERROR.Equals(item.TorikomiSts))
                            {
                                <div>
                                    <a id="btnErrInfo" href="javascript:void(0)" onclick="doErrInfo(@item.BatchId)" class="btn btn-warning" tabindex="@(startIndex + index)">エラー内容</a>
                                </div>
                            }
                            else if (AppConst.TorikomiSts.TEMPORARY_TABLE_IMPORTED.Equals(item.TorikomiSts) ||
                            AppConst.TorikomiSts.DATA_LOCKED.Equals(item.TorikomiSts) ||
                            AppConst.TorikomiSts.BACKUP_DATA_OUTPUT.Equals(item.TorikomiSts) ||
                            AppConst.TorikomiSts.DATA_REFLECTED.Equals(item.TorikomiSts))
                            {
                                <div>
                                    <a id="btnDataDetail" href="javascript:void(0)" onclick="doDataDetail(@item.BatchId)" class="btn btn-warning" tabindex="@(startIndex + index)">データ反映</a>
                                </div>
                            }
                        </td>

                        @*取込完了日時*@
                        <td>@Html.Label("", string.IsNullOrEmpty(item.TorikomiDateStr) ? "-" : item.TorikomiDateStr)</td>

                        @*ロック開始日時*@
                        <td>@Html.Label("", string.IsNullOrEmpty(item.LockDateStr) ? "-" : item.LockDateStr)</td>

                        @*データ反映日時*@
                        <td>@Html.Label("", string.IsNullOrEmpty(item.HaneiDateStr) ? "-" : item.HaneiDateStr)</td>

                        @*削除*@
                        <td>
                            <div>
                                @if (AppConst.TorikomiSts.TEMPORARY_TABLE_IMPORTED.Equals(item.TorikomiSts) ||
                               AppConst.TorikomiSts.IMPORT_COMPLETED.Equals(item.TorikomiSts) ||
                               AppConst.TorikomiSts.IMPORT_ERROR.Equals(item.TorikomiSts))
                                {
                                    <a id="btnDelete" href="javascript:void(0)" onclick="doDelete(@item.BatchId)" class="btn btn-warning" tabindex="@(startIndex + index + 1)">削除</a>
                                }
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="table-responsive table-thead-container">
        @Html.Pager("Pager", "pagerClick", Model.SearchResult.Pager)
    </div>
}
